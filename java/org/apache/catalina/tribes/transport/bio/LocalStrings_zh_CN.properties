# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

bioReceiver.already.started=服务器套接字已启动。
bioReceiver.run.fail=无法运行复制的侦听器。
bioReceiver.socket.closeFailed=socket.关闭失败
bioReceiver.start.fail=无法启动群集接收器
bioReceiver.threadpool.fail=线程池可以初始化。侦听器未启动
bioReceiver.threads.busy=所有BIO服务器复制线程都很忙，在释放线程之前无法处理更多请求。

bioReplicationTask.messageDataReceived.error=错误抛出，来自于消息数据收到
bioReplicationTask.reader.closeFailed=无法关闭reader
bioReplicationTask.socket.closeFailed=无法关闭套接字
bioReplicationTask.unable.sendAck=无法通过通道发送ACK，通道已断开？：[{0}]
bioReplicationTask.unable.service=不能服务bio套接字

bioSender.ack.eof=在本地端口[{0}:{1，number，integer}]达到EOF
bioSender.ack.missing=不能读确认表格:[{0}] {1,number,integer}] in {2,number,integer} 毫秒, 失去socket连接, 重试连接.
bioSender.ack.wrong=在本地端口[{0}：{1，number，integer}]读取10个字节后丢失正确的ACK
bioSender.closeSocket=发件人关闭套接字到[{0}：{1，number，integer}]（关闭计数{2，数字，整数}）
bioSender.disconnect=发送方与[{0}:{1，number，integer}]断开连接（断开连接计数{2，number，integer}）
bioSender.fail.AckReceived=收到一个失败的 ack ):org.apache.catalina.tribes.transport.Constants.FAIL_ACK_DATA
bioSender.openSocket=发件人打开套接字到[{0}：{1，number，integer}]（打开计数{2，数字，整数}）
bioSender.openSocket.failure=打开发件人套接字[{0}:{1，number，integer}]失败！（打开失败计数{2，number，integer}）
bioSender.send.again=再次发送数据到 [{0}:{1,number,integer}]

pooledMultiSender.retrieve.fail=无法从发件人池中检索发件人。
pooledMultiSender.unable.retrieve.sender=无法获取数据发送器，超时([{0}] ms)错误
